import numpy as np
def MonteCarlo_double(f, g, x0, x1, y0, y1, n):
	"""
	Численное интегрирование методом Монте-Карло функции
	f по области g >= 0, помещенной в прямоугольник
	[x0, x1]x[y0, y1].
	n^2 - количество случайных точек
	"""
	x = np.random.uniform(x0, x1, n)
	y = np.random.uniform(y0, y1, n)
	f_mean = 0          # среднее значение f
	num_inside = 0      # число точек, попавших в область интегрирования (g>=0)
	for i in range(len(x)):
		for j in range(len(y)):
			if(g(x[i], y[j]) >= 0):
				num_inside += 1
				f_mean += f(x[i], y[j])

	f_mean = f_mean/float(num_inside)
	area = num_inside/float(n**2)*(x1 - x0)*(y1 - y0)
	return area*f_mean

def test_MonteCarlo_double_rectangle_area():
	""" Проверяет вычисление площади прямоугольника """
	g = lambda x, y: (1 if (0 <= x <= 2) and (3 <= y <= 4.5) else -1)
	x0 = 0; x1 = 3; y0 = 2; y1 = 5
	n = 1000
	np.random.seed(8)     # фиксируем начальную точку
	I_expected = 3.121092 # получено с данной начальной точкой
	I_computed = MonteCarlo_double(lambda x, y: 1, g, x0, x1, y0, y1, n)
	tol = 1E-14
	success = abs(I_computed - I_expected) < tol
	msg = 'I_computed = %g, I_expected = %g' % (I_computed, I_expected)
	assert success, msg


def test_MonteCarlo_double_circle_r():
    """ Проверяет интеграл от r по кругу радиуса 2 """

    def g(x, y):
        xc, yc = 0, 0  # центр
        R = 2  # радиус
        return R ** 2 - (x - xc) ** 2 - (y - yc) ** 2

    # Точное значение:
    # 2*pi*1/3
    import sympy
    r = sympy.symbols('r')
    I_exact = sympy.integrate(2 * sympy.pi * r * r, (r, 0, 2))
    print
    u'Точное значение интеграла: ', I_exact.evalf()
    x0 = -2;
    x1 = 2;
    y0 = -2;
    y1 = 2
    n = 1000
    np.random.seed(8)
    I_expected = 16.6564905209406824  # полученное для данной начальной точки
    I_computed = MonteCarlo_double(
        lambda x, y: np.sqrt(x ** 2 + y ** 2),
        g, x0, x1, y0, y1, n)
    tol = 1E-14
    success = abs(I_computed - I_expected) < tol
    msg = 'I_computed = %.16f, I_expected = %.16f' % (I_computed, I_expected)
    assert success, msg

test_MonteCarlo_double_circle_r()